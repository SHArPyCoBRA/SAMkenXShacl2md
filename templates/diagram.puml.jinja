@startuml
!theme vibrant
skinparam classFontSize 14
!define LIGHTORANGE
skinparam componentStyle uml2
skinparam wrapMessageWidth 100
' skinparam ArrowColor #Maroon
' Remove shadows
skinparam shadowing false
'skinparam linetype polyline
skinparam ArrowMessageAlignment left

{# legend top right
{% for prefix, ns in namespaces %}
{{prefix}}: {{ns}}
{% endfor %}
endlegend #}

{% for class in classes %}
class "{% if class.label %}<b>{{class.label}}</b> {% endif %}({{class.shortname}})" as {{class.shortname|replace(":","_")}} [[#{{class.shortname|urlencode}}]]
{% for superclass in class.superclasses %}
{# {% if superclass in classes %} #}
class "{% if superclass.label %}<b>{{superclass.label}}</b> {% endif %}({{superclass.shortname}})" as {{superclass.shortname|replace(":","_")}} [[#{{superclass.shortname|urlencode}}]]
{# {% endif %} #}
{% endfor %}
{% endfor %}

{% for class in classes %}
{% for superclass in class.superclasses %}
{{class.shortname|replace(":","_")}} --|> {{superclass.shortname|replace(":","_")}} #blue;line.dotted;text:blue
{% endfor %}

{% set  unpacked_class_properties = [] %}
{% for property in class.properties %}
{% for datatype in property.datatypes %}
{% set new_property = property.copy() %}
{%- set _ = new_property.update({'datatype' : datatype}) -%}
{% set unpacked_class_properties = unpacked_class_properties.append( new_property ) %}
{% endfor %}
{% endfor %}
{% for property in class.properties %}
{# Print attributes #}
{% if property.datatypes|selectattr("type", "equalto", "datatype")| list| length > 0 %}
{{class.shortname|replace(":","_")}} : {{property.label}} : <i>{% for datatype in property.datatypes|selectattr("type", "equalto", "datatype") %}{% if loop.index > 1 %} | {% endif %}{{datatype.shortname}}{% endfor %}</i> [{{property.min if property.min is not none else '0'}}..{{property.max if property.max is not none else 'n'}}]
{% endif %}
{% endfor %}
{# Print relations #}
{% for datatype, properties in unpacked_class_properties|groupby('datatype.shortname') %}
{% for property in properties %}
{%- if property.datatype.type == "class" -%}
{%- if loop.index == 1 %}{{class.shortname|replace(":","_")}} --> {{property.datatype.shortname|replace(":","_")}} :{% else %} \l{% endif %}{{property.label}} \l [{{property.min if property.min is not none else '0'}}..{{property.max if property.max is not none else 'n'}}] {% if loop.index==properties|length %} > {% endif %}
{%- endif -%}
{% endfor %}

{% endfor %}

{% endfor %}

hide circle
hide methods
hide empty members
@enduml


